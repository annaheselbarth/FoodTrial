@model FoodTrial.Models.MedicineCreate

@{
    ViewBag.Title = "Create";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


<div class="form-horizontal">
    <div class="mask d-flex align-items-center h-100" style="background-color: white;">
        <div class="container">
            <div class="table-bordered">
            <div class="row justify-content-center">
                <div class="col-xl-5 col-md-8">
                    <form class="bg-white  rounded-5 shadow-5-strong p-5">
                        <h3>Add Medicine</h3>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.MedicineId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.MedicineId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MedicineId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.TrialId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.TrialId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TrialId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.Dose, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Dose, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Dose, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.Frequency, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Frequency, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Frequency, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-outline mb-4">
                            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-outline mb-4">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </form>   
                  </div>
                </div>
            </div>
        </div>
    </div>
</div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
